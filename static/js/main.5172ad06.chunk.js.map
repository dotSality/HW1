{"version":3,"sources":["p2-homeworks/h2/Task.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Task.tsx","p2-homeworks/h2/Tasks.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","main","avatarContainer","avatar","src","alt","message","name","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Task","priorityClass","priority","task","taskContainer","taskName","onClick","deleteTaskCallback","_id","Tasks","mappedTasks","data","map","a","key","checkFilter","e","setFilter","currentTarget","value","setClassActive","filter","buttonActive","mainContainer","buttonContainer","defaultTasks","HW2","useState","tasks","setTasks","filteredTasks","filterTasks","deleteTask","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","Greeting","setNameCallback","addUser","totalUsers","inputClass","input","mainCont","cont","placeholder","errorBlock","addButton","GreetingContainer","users","addUserCallback","setName","setError","VALIDATION_EXPRESSION","match","alert","length","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","disabled","spanDisabled","checked","customCheckbox","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5172ad06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Task_mainContainer__qdHIL\",\"button\":\"Task_button__83g0P\",\"taskContainer\":\"Task_taskContainer__2jQs4\",\"taskName\":\"Task_taskName__dZmu1\",\"priority\":\"Task_priority__18HPy\",\"buttonContainer\":\"Task_buttonContainer__2pVfR\",\"buttonActive\":\"Task_buttonActive__Pzoi1\",\"high\":\"Task_high__2g3Vn\",\"middle\":\"Task_middle__3XZ3F\",\"low\":\"Task_low__3JZML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCont\":\"Greeting_mainCont__3QBWc\",\"cont\":\"Greeting_cont__1kRG_\",\"input\":\"Greeting_input__LhsXx\",\"totalUsers\":\"Greeting_totalUsers__lJ6gu\",\"addButton\":\"Greeting_addButton__1MAyl\",\"errorBlock\":\"Greeting_errorBlock__2xR_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__229dv\",\"avatarContainer\":\"Message_avatarContainer__2XEe-\",\"avatar\":\"Message_avatar__1Fqno\",\"message\":\"Message_message__18IEj\",\"time\":\"Message_time__1j3Tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2frdZ\",\"customCheckbox\":\"SuperCheckbox_customCheckbox__3FQiL\",\"spanClassName\":\"SuperCheckbox_spanClassName__37sSh\",\"spanDisabled\":\"SuperCheckbox_spanDisabled__20Ydr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1joZt\",\"errorInput\":\"SuperInputText_errorInput__13Oas\",\"error\":\"SuperInputText_error__eCuFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2tjJC\",\"column\":\"HW4_column__2vr9j\",\"testSpanError\":\"HW4_testSpanError__2EEG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__qYpDB\",\"red\":\"SuperButton_red__3gzaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jit8\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.avatarContainer}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.avatar} alt={'anime'}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.message}>\r\n                <h3>{props.name}</h3>\r\n                <p>{props.message}</p>\r\n                <p className={s.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://i.ibb.co/9gPNL7J/avatar.png',\r\n    name: 'Smith',\r\n    message: '— Почему, мистер Остапкевич, почему? Во имя чего? Что вы делаете? ' +\r\n        'Зачем, зачем верстаете? Зачем продолжаете кодить? Неужели вы верите в какую-то' +\r\n        ' работу, или вам просто страшно быть бомжом? Так в чем же миссия, может быть, вы ' +\r\n        'откроете? Это работа, слава, может быть, тёлочки, или вы боретесь за признание? ' +\r\n        'Иллюзии, мистер Остапкевич, причуды восприятия. Хрупкие логические теории слабого ' +\r\n        'человека, который отчаянно пытается оправдать свое занятие — бесцельное и бессмысленное!' +\r\n        ' Но они, мистер Остапкевич, как и вы, столь же искусственны. Только человек может ' +\r\n        'выдумать скучное и безжизненное понятие «Реакт»! Вам пора это увидеть, мистер Остапкевич, ' +\r\n        'увидеть и понять! Вы не можете победить, продолжать борьбу бессмысленно. Почему, мистер ' +\r\n        'Остапкевич, почему вы упорствуете?',\r\n    time: '02:18'\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {TaskType} from './HW2';\r\nimport s from './Task.module.css';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype TaskPropsType = {\r\n    // key не нужно типизировать\r\n    task: TaskType\r\n    deleteTaskCallback: (_id: number) => void\r\n}\r\n\r\nfunction Task(props: TaskPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteTaskCallback(props.task._id);\r\n    }\r\n\r\n    const priorityClass = `${s.priority} ${s[props.task.priority]}`\r\n\r\n    return (\r\n        <div className={s.taskContainer}>\r\n            <span className={s.taskName}>{props.task.name} </span>\r\n            <span className={priorityClass}>{props.task.priority} </span>\r\n            <SuperButton red onClick={deleteCallback}>x</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\nimport { TaskType, FilterType } from './HW2'\r\nimport s from './Task.module.css';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype TasksPropsType = { // need to fix any\r\n    data: Array<TaskType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteTaskCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Tasks(props: TasksPropsType) {\r\n    const mappedTasks = props.data.map((a: TaskType) => (\r\n        <Task // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            task={a}\r\n            deleteTaskCallback={props.deleteTaskCallback}\r\n        />\r\n    ))\r\n\r\n    const checkFilter = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        props.setFilter(e.currentTarget.value as FilterType );\r\n    }\r\n\r\n    const setClassActive = (filter: FilterType) => {\r\n        return props.filter === filter ? s.buttonActive : '';\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n\r\n            {mappedTasks}\r\n            <div className={s.buttonContainer}>\r\n                <SuperButton onClick={checkFilter} className={setClassActive('all')} value={'all'}>All</SuperButton>\r\n                <SuperButton onClick={checkFilter} className={setClassActive('high')} value={'high'}>High</SuperButton>\r\n                <SuperButton onClick={checkFilter} className={setClassActive('middle')} value={'middle'}>Middle</SuperButton>\r\n                <SuperButton onClick={checkFilter} className={setClassActive('low')} value={'low'}>Low</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useState} from 'react'\r\nimport Tasks from './Tasks'\r\n\r\n// types\r\nexport type TaskPriorityType = 'low' | 'middle' | 'high'\r\nexport type TaskType = {_id: number, name: string, priority: TaskPriorityType}\r\nexport type FilterType = 'all' | TaskPriorityType\r\n\r\n// constants\r\nconst defaultTasks: Array<TaskType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'CS GO', priority: 'low'},\r\n    {_id: 3, name: 'Guitar', priority: 'low'},\r\n    {_id: 4, name: 'Work', priority: 'middle'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterTasks = (tasks: Array<TaskType>, filter: FilterType) : Array<TaskType> => { // need to fix any\r\n    return (filter === 'all') ? tasks : tasks.filter(task => task.priority === filter)// need to fix\r\n}\r\nexport const deleteTask = (tasks: Array<TaskType>, _id: TaskType['_id']): Array<TaskType> => { // need to fix any\r\n    return tasks.filter(task => task._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [tasks, setTasks] = useState<Array<TaskType>>(defaultTasks) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredTasks = filterTasks(tasks, filter)\r\n    const deleteTaskCallback = (_id: TaskType['_id']) => setTasks(deleteTask(tasks, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Tasks\r\n                data={filteredTasks}\r\n                setFilter={setFilter}\r\n                deleteTaskCallback={deleteTaskCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeTasks/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from './HW3';\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: string\r\n    onKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPress}, props) => {\r\n    let inputClass = error ? s.error + ' ' + s.input : s.input\r\n\r\n    return (\r\n        <div className={s.mainCont}>\r\n            <div className={s.cont}>\r\n                <div>\r\n                    <SuperInputText\r\n                        placeholder={'Enter your name...'}\r\n                        value={name}\r\n                        onKeyPress={onKeyPress}\r\n                        onChange={setNameCallback}\r\n                        error={error}\r\n                        className={inputClass}\r\n                        spanClassName={s.errorBlock}\r\n                    />\r\n                </div>\r\n                <SuperButton className={s.addButton} onClick={addUser}>add</SuperButton>\r\n                <span className={s.totalUsers}>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setErrorMessage = (message: string) => setError(message)\r\n\r\n    const VALIDATION_EXPRESSION = /[\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\-\\+\\=\\\\\\|\\/\\,\\<\\.\\>\\`\\~\\'\\\"\\;\\:\\?\\s0-9А-Яа-я]/gm\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.match(VALIDATION_EXPRESSION) || !name) {\r\n            setErrorMessage('Invalid name format. Please, enter correct name')\r\n        } else {\r\n            alert(`Hello ${name} !`)\r\n            addUserCallback(name)\r\n        }\r\n        setName('')\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => (e.key === 'Enter') ? addUser() : null\r\n\r\n    const totalUsers = `Total users: ${users.length}`\r\n\r\n    return (\r\n        <Greeting\r\n            onKeyPress={onKeyPressCallback}\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\nconst HW3 = () => {\r\n    const [users, setUsers] = useState<UserType[]>( [])\r\n    const addUserCallback = (name: string) => setUsers([...users, {_id: v1(), name: name}])\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <br/>\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n    spanClassName = `${s.spanClassName} ${restProps.disabled ? s.spanDisabled : ''}`\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.customCheckbox}></span>\r\n            {children && <span className={spanClassName}>{children}</span>}\r\n            {!children && <br/>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Invalid text format'\r\n\r\n    const placeholderText = 'Your placeholder...'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    placeholder={placeholderText}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                    disabled\r\n                >\r\n                    disabled {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}