{"version":3,"sources":["p2-homeworks/h2/Task.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Task.tsx","p2-homeworks/h2/Tasks.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","main","avatarContainer","avatar","src","alt","message","name","time","messageData","HW1","Task","priorityClass","priority","task","taskContainer","taskName","button","onClick","deleteTaskCallback","_id","Tasks","mappedTasks","data","map","a","key","checkFilter","e","setFilter","currentTarget","value","setClassActive","filter","buttonActive","mainContainer","buttonContainer","defaultTasks","HW2","useState","tasks","setTasks","filteredTasks","filterTasks","deleteTask","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7f1c7d3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Task_mainContainer__qdHIL\",\"button\":\"Task_button__83g0P\",\"taskContainer\":\"Task_taskContainer__2jQs4\",\"taskName\":\"Task_taskName__dZmu1\",\"priority\":\"Task_priority__18HPy\",\"buttonContainer\":\"Task_buttonContainer__2pVfR\",\"buttonActive\":\"Task_buttonActive__Pzoi1\",\"high\":\"Task_high__2g3Vn\",\"middle\":\"Task_middle__3XZ3F\",\"low\":\"Task_low__3JZML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__229dv\",\"avatarContainer\":\"Message_avatarContainer__2XEe-\",\"avatar\":\"Message_avatar__1Fqno\",\"message\":\"Message_message__18IEj\",\"time\":\"Message_time__1j3Tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jit8\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.avatarContainer}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.avatar} alt={'anime'}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.message}>\r\n                <h3>{props.name}</h3>\r\n                <p>{props.message}</p>\r\n                <p className={s.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://i.ibb.co/9gPNL7J/avatar.png',\r\n    name: 'Smith',\r\n    message: '— Почему, мистер Остапкевич, почему? Во имя чего? Что вы делаете? ' +\r\n        'Зачем, зачем верстаете? Зачем продолжаете кодить? Неужели вы верите в какую-то' +\r\n        ' работу, или вам просто страшно быть бомжом? Так в чем же миссия, может быть, вы ' +\r\n        'откроете? Это работа, слава, может быть, тёлочки, или вы боретесь за признание? ' +\r\n        'Иллюзии, мистер Остапкевич, причуды восприятия. Хрупкие логические теории слабого ' +\r\n        'человека, который отчаянно пытается оправдать свое занятие — бесцельное и бессмысленное!' +\r\n        ' Но они, мистер Остапкевич, как и вы, столь же искусственны. Только человек может ' +\r\n        'выдумать скучное и безжизненное понятие «Реакт»! Вам пора это увидеть, мистер Остапкевич, ' +\r\n        'увидеть и понять! Вы не можете победить, продолжать борьбу бессмысленно. Почему, мистер ' +\r\n        'Остапкевич, почему вы упорствуете?',\r\n    time: '02:18'\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {TaskType} from './HW2';\r\nimport s from './Task.module.css';\r\n\r\ntype TaskPropsType = {\r\n    // key не нужно типизировать\r\n    task: TaskType\r\n    deleteTaskCallback: (_id: number) => void\r\n}\r\n\r\nfunction Task(props: TaskPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteTaskCallback(props.task._id);\r\n    }\r\n\r\n    const priorityClass = `${s.priority} ${s[props.task.priority]}`\r\n\r\n    return (\r\n        <div className={s.taskContainer}>\r\n            <span className={s.taskName}>{props.task.name} </span>\r\n            <span className={priorityClass}>{props.task.priority} </span>\r\n            <button className={s.button} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\nimport { TaskType, FilterType } from './HW2'\r\nimport s from './Task.module.css';\r\n\r\ntype TasksPropsType = { // need to fix any\r\n    data: Array<TaskType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteTaskCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Tasks(props: TasksPropsType) {\r\n    const mappedTasks = props.data.map((a: TaskType) => (\r\n        <Task // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            task={a}\r\n            deleteTaskCallback={props.deleteTaskCallback}\r\n        />\r\n    ))\r\n\r\n    const checkFilter = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        props.setFilter(e.currentTarget.value as FilterType );\r\n    }\r\n\r\n    const setClassActive = (filter: FilterType) => {\r\n        return (props.filter === filter ? s.buttonActive : s.button)\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContainer}>\r\n\r\n            {mappedTasks}\r\n            <div className={s.buttonContainer}>\r\n                <button onClick={checkFilter} className={setClassActive('all')} value={'all'}>All</button>\r\n                <button onClick={checkFilter} className={setClassActive('high')} value={'high'}>High</button>\r\n                <button onClick={checkFilter} className={setClassActive('middle')} value={'middle'}>Middle</button>\r\n                <button onClick={checkFilter} className={setClassActive('low')} value={'low'}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useState} from 'react'\r\nimport Tasks from './Tasks'\r\n\r\n// types\r\nexport type TaskPriorityType = 'low' | 'middle' | 'high'\r\nexport type TaskType = {_id: number, name: string, priority: TaskPriorityType}\r\nexport type FilterType = 'all' | TaskPriorityType\r\n\r\n// constants\r\nconst defaultTasks: Array<TaskType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'CS GO', priority: 'low'},\r\n    {_id: 3, name: 'Guitar', priority: 'low'},\r\n    {_id: 4, name: 'Work', priority: 'middle'},\r\n    {_id: 5, name: 'HTML & CSS', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterTasks = (tasks: Array<TaskType>, filter: FilterType) : Array<TaskType> => { // need to fix any\r\n    return (filter === 'all') ? tasks : tasks.filter(task => task.priority === filter)// need to fix\r\n}\r\nexport const deleteTask = (tasks: Array<TaskType>, _id: TaskType['_id']): Array<TaskType> => { // need to fix any\r\n    return tasks.filter(task => task._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [tasks, setTasks] = useState<Array<TaskType>>(defaultTasks) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredTasks = filterTasks(tasks, filter)\r\n    const deleteTaskCallback = (_id: TaskType['_id']) => setTasks(deleteTask(tasks, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Tasks\r\n                data={filteredTasks}\r\n                setFilter={setFilter}\r\n                deleteTaskCallback={deleteTaskCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeTasks/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n\r\n\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}